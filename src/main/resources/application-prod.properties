server.port=${PORT:10000}
server.address=0.0.0.0

# ----------------------------------
# 2. Configuration de la base de donnee PostgreSQL


# Votre configuration actuelle est valide pour Render, mais expose les identifiants dans le code source.
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration SSL specifique Render pour eviter les erreurs de connexion.
spring.datasource.hikari.connection-init-sql=SELECT 1


# 3. JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update

# Desactive le formatage SQL et l'affichage des requetes pour des raisons de performance.
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Specification du dialecte pour PostgreSQL.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# 5. Logging (Optimise pour la production)

logging.level.com.hades.blog.filter=INFO
logging.level.com.hades.blog.service.JwtService=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN



# Permet d'exposer les endpoints de sant pour la supervision.
management.endpoints.web.exposure.include=health


# Configuration Hibernate pour les LOB
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.connection.handling_mode=delayed_acquisition_and_release_after_transaction
